"""1. Функция берёт на вход строку и возвращает true, если она является палиндромом и false в противном случае."""


def palindrome(str1):  # Создаём функцию палиндрома. Аргумент со строкой запросим при вызове функции
    str1 = str1.replace(' ', '').lower() # Убираю пробелы в фразе, привожу к нижнему регистру
    return str1 == str1[::-1]  # Возвращаем True если она палиндром, иначе false


print(palindrome(input('Введите строку для проверки на палиндром: ')))  # Вызвали функцию в принте с запросом строки

"""2. Напишите и вызовете для себя или какого-нибудь персонажа функцию, которая берёт на вход имя, фамилию, отчество
и возраст и возвращает строку вида “Иванов Иван Иванович 1973 г.р. зарегистрирован”."""


def voz(n, ln, ot, age):  # функция с аргументами имя, фамилия, отчество, возраст
    return f'{n} {ln} {ot} {2023 - int(age)} г.р. зарегистрирован'  # Возвращаем строку по ТЗ


print(voz(input('Введите имя: '), input('Введите фамилия: '), input('Введите отчество: '), input('Введите возраст: ')))
# Используем функцию для примера

"""3. Напишите функцию, которая берёт на вход 2 или 3 натуральных числа и возвращает их максимум.
Встроенным методом max() пользоваться нельзя Возможно, вам потребуется указать аргумент по умолчанию."""


def max1(a=None, b=None, c=None):  # Функция с аргументами по умолчанию
    if a is not None and b is not None and c is not None:  # если все три аргумента не по умолчанию
        if a >= b >= c:  # Если a больше
            return a  # отдаём a
        elif a <= b >= c:  # Если b больше
            return b  # отдаём b
        elif a <= b <= c:  # Если c больше
            return c  # отдаём c
    elif a is not None and b is not None:  # Если переданы только два аргумента
        if a >= b:  # Если a больше
            return a  # отдаём a
        elif a <= b:  # Если b больше
            return b  # отдаём b
    else:
        return "Аргументы отсутствуют"


print(max1())  # Вызываем функцию без аргументов для примера
print(max1(5, 4))  # Вызываем функцию с 2 аргументами для примера
print(max1(5, 4, 3))  # Вызываем функцию с 3 аргументами для примера
